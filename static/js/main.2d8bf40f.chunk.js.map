{"version":3,"sources":["milestones.js","App.js","reportWebVitals.js","index.js"],"names":["mileStoneTagStyle","bgColor","strokeColor","borderRadius","pointerWidth","lastReleaseTagStyle","simplified","templateExtend","TemplateName","Metro","commit","message","displayHash","displayAuthor","createFixedHashGenerator","hashIndex","milestones","gitgraph","master","branch","tag","name","style","subject","dotText","eth2","merge","App","className","options","orientation","template","generateCommitHash","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAGMA,EAAoB,CACxBC,QAAS,UACTC,YAAa,UACbC,aAAc,EACdC,aAAc,GAGVC,EAAsB,CAC1BJ,QAAS,SACTC,YAAa,UAKFI,EAAaC,YAAeC,IAAaC,MAAO,CAC3DC,OAAQ,CACNC,QAAS,CACPC,aAAa,EACbC,eAAe,MAMd,SAASC,IACd,IAAIC,EAAY,EAChB,OAAO,2BAHU,QAGV,OAAsBA,MAGxB,IAAMC,EAAa,SAACC,GAEzB,IAAMC,EAASD,EAASE,OAAO,YAC/BD,EACGR,OAAO,mBACPU,IAAI,gBACJV,OAAO,kBACPU,IAAI,CACHC,KAAM,UACNC,MAAOtB,IAERU,OAAO,oBACPU,IAAI,CACHC,KAAM,YACNC,MAAOtB,IAERU,OAAO,CAACa,QAAS,kBAAmBC,QAAS,iBAC7Cd,OAAO,6BACPA,OAAO,2BACPA,OAAO,qBACPU,IAAI,CACHC,KAAM,aACNC,MAAOtB,IAERU,OAAO,yBACPA,OAAO,CAACa,QAAS,oBAAqBC,QAAS,iBAC/Cd,OAAO,oBACPA,OAAO,uBACPU,IAAI,QAOP,IAAMK,EAAOR,EAASE,OAAO,gBAC7BM,EACGf,OAAO,kCACPU,IAAI,QAEPF,EACGR,OAAO,iBACPU,IAAI,CACHC,KAAM,cACNC,MAAOjB,IAGXoB,EAAKf,OAAO,gCACZQ,EACGR,OAAO,4BAGVe,EACGC,MAAMR,EAAQ,aACdE,IAAI,CACHC,KAAM,WACNC,MAAOtB,K,eC5DE2B,MAvBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CAAUC,QAAS,CACjBC,YAAa,WACbC,SAAUzB,EACV0B,mBAAoBlB,KAHtB,SAIIE,SCDGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2d8bf40f.chunk.js","sourcesContent":["import { templateExtend, TemplateName } from \"@gitgraph/react\";\n\n// Custom tags\nconst mileStoneTagStyle = {\n  bgColor: '#03ca9b',\n  strokeColor: '#03ca9b',\n  borderRadius: 0,\n  pointerWidth: 0,\n};\n\nconst lastReleaseTagStyle = {\n  bgColor: 'orange',\n  strokeColor: 'orange',\n  // borderRadius: 0,\n  // pointerWidth: 0,\n};\n\nexport const simplified = templateExtend(TemplateName.Metro, {\n  commit: {\n    message: {\n      displayHash: false,\n      displayAuthor: false,\n    },\n  },\n});\n\nconst hashPrefix = \"h45h\";\nexport function createFixedHashGenerator() {\n  let hashIndex = 0;\n  return () => `${hashPrefix}${hashIndex++}`;\n}\n\nexport const milestones = (gitgraph) => {\n  // https://en.wikipedia.org/wiki/Ethereum#Launch_and_milestones\n  const master = gitgraph.branch(\"Ethereum\");\n  master\n    .commit(\"Frontier 2015-7\")\n    .tag(\"Ethereum 1.0\")\n    .commit(\"Ice Age 2015-9\")\n    .tag({\n      name: \"Ice Age\",\n      style: mileStoneTagStyle,\n    })\n    .commit(\"Homestead 2016-3\")\n    .tag({\n      name: \"Homestead\",\n      style: mileStoneTagStyle,\n    })\n    .commit({subject: \"DAO Fork 2016-7\", dotText: 'ðŸ”§'})\n    .commit(\"Tangerine Whistle 2016-10\")\n    .commit(\"Spurious Dragon 2016-11\")\n    .commit(\"Byzantium 2017-10\")\n    .tag({\n      name: \"Metropolis\",\n      style: mileStoneTagStyle,\n    })\n    .commit(\"Constantinople 2019-2\")\n    .commit({subject: \"Petersburg 2019-2\", dotText: 'ðŸ”§'})\n    .commit(\"Istanbul 2019-12\")\n    .commit(\"Muir Glacier 2020-1\")\n    .tag(\"Eth1\")\n\n  // const bsc = gitgraph.branch(\"Binance Smart Chain\");\n  // bsc\n  //   .commit('init 2020/4')\n  //   .commit('Lagrange 2021/2')\n\n  const eth2 = gitgraph.branch(\"Ethereum 2.0\");\n  eth2\n    .commit(\"Phase 0 (Beacon Chain) 2020-12\")\n    .tag(\"Eth2\")\n\n  master\n    .commit(\"Berlin 2021-4\")\n    .tag({\n      name: \"We are here\",\n      style: lastReleaseTagStyle,\n    })\n\n  eth2.commit(\"Altair (Light Client) 2021-6\") // light client support\n  master\n    .commit(\"London (EIP-1559) 2021-7\")\n    // .commit(\"ShangHai\")\n\n  eth2\n    .merge(master, \"The Merge\")\n    .tag({\n      name: \"Serenity\",\n      style: mileStoneTagStyle,\n    })\n}\n","// import logo from './logo.svg';\nimport { Gitgraph } from \"@gitgraph/react\";\nimport { milestones, simplified, createFixedHashGenerator } from './milestones'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Gitgraph options={{\n          orientation: \"vertical\",\n          template: simplified,\n          generateCommitHash: createFixedHashGenerator(),\n        }}>{milestones}</Gitgraph>\n      </header>\n      {/* <footer><a\n          className=\"App-link\"\n          href=\"https://en.wikipedia.org/wiki/Ethereum#Launch_and_milestones\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Wikipedia as Reference\n        </a>\n      </footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}