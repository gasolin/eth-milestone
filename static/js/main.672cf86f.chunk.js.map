{"version":3,"sources":["milestones.js","App.js","reportWebVitals.js","index.js"],"names":["mileStoneTagStyle","bgColor","strokeColor","borderRadius","pointerWidth","lastReleaseTagStyle","renderDot","commit","viewBox","height","width","fill","d","simplified","templateExtend","TemplateName","Metro","message","displayHash","displayAuthor","createFixedHashGenerator","hashIndex","milestones","gitgraph","master","branch","tag","name","style","subject","dotText","checkout","eth2","merge","App","className","options","orientation","template","generateCommitHash","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAIMA,EAAoB,CACxBC,QAAS,UACTC,YAAa,UACbC,aAAc,EACdC,aAAc,GAGVC,EAAsB,CAC1BJ,QAAS,SACTC,YAAa,UAaTI,EAAY,SAASC,GACzB,OACE,qBAAKC,QAAQ,YAAYC,OAAQ,GAAIC,MAAO,GAA5C,SACE,sBAAMC,KAAK,UAAUC,EAAE,qBAKhBC,EAAaC,YAAeC,IAAaC,MAAO,CAC3DT,OAAQ,CACNU,QAAS,CACPC,aAAa,EACbC,eAAe,MAMd,SAASC,IACd,IAAIC,EAAY,EAChB,OAAO,2BAHU,QAGV,OAAsBA,MAMxB,IAAMC,EAAa,SAACC,GACzB,IAAMC,EAASD,EAASE,OAAO,YAC/BD,EACGjB,OAAO,mBACPmB,IAAI,gBACJnB,OAAO,kBACPmB,IAAI,CACHC,KAAM,UACNC,MAAO5B,IAERO,OAAO,oBACPmB,IAAI,CACHC,KAAM,YACNC,MAAO5B,IAERO,OAAO,CAACsB,QAAS,kBAAmBC,QAAS,iBAC7CvB,OAAO,6BACPA,OAAO,2BACPA,OAAO,qBACPmB,IAAI,CACHC,KAAM,aACNC,MAAO5B,IAERO,OAAO,yBACPA,OAAO,CAACsB,QAAS,oBAAqBC,QAAS,iBAC/CvB,OAAO,oBACPA,OAAO,uBACPmB,IAAI,QAYPF,EAAOO,WACP,IAAMC,EAAOT,EAASE,OAAO,gBAC7BO,EACGzB,OAAO,kCACPmB,IAAI,QAWPF,EACGjB,OAAO,iBAQViB,EACGjB,OAAO,4BAIVyB,EACGzB,OAAO,iCACPmB,IAAI,CACHC,KAAM,cACNC,MAAOvB,IAWXmB,EACGjB,OAAO,yBAKVyB,EACGC,MAAMT,EAAQ,aACdE,IAAI,CACHC,KAAM,WACNC,MAAO5B,IAGXgC,EAAKzB,OAAO,CACVsB,QAAS,GACTvB,UAAWA,K,MC1HA4B,MAvBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CAAUC,QAAS,CACjBC,YAAa,WACbC,SAAUzB,EACV0B,mBAAoBnB,KAHtB,SAIIE,SCDGkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.672cf86f.chunk.js","sourcesContent":["import * as React from 'react';\nimport { templateExtend, TemplateName } from \"@gitgraph/react\";\n\n// Custom tags\nconst mileStoneTagStyle = {\n  bgColor: '#03ca9b',\n  strokeColor: '#03ca9b',\n  borderRadius: 0,\n  pointerWidth: 0,\n};\n\nconst lastReleaseTagStyle = {\n  bgColor: 'orange',\n  strokeColor: 'orange',\n  // borderRadius: 0,\n  // pointerWidth: 0,\n};\n\n/* <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 30 30\"\n  height=\"30\"\n  width=\"30\"\n>\n  <rect width=\"10\" height=\"20\" fill=\"rgb(0, 143, 181)\" />\n</svg> */\nconst renderDot = function(commit) {\n  return (\n    <svg viewBox=\"0 0 12 30\" height={30} width={30}>\n      <path fill=\"#008FB5\" d=\"M0 0H10V20H0z\" />\n    </svg>\n  )\n}\n\nexport const simplified = templateExtend(TemplateName.Metro, {\n  commit: {\n    message: {\n      displayHash: false,\n      displayAuthor: false,\n    },\n  },\n});\n\nconst hashPrefix = \"h45h\";\nexport function createFixedHashGenerator() {\n  let hashIndex = 0;\n  return () => `${hashPrefix}${hashIndex++}`;\n}\n\n// https://ethereum.org/en/history/\n// https://eth.wiki/roadmap/roadmap\n// https://en.wikipedia.org/wiki/Ethereum#Launch_and_milestones\nexport const milestones = (gitgraph) => {\n  const master = gitgraph.branch(\"Ethereum\");\n  master\n    .commit(\"Frontier 2015-7\")\n    .tag(\"Ethereum 1.0\")\n    .commit(\"Ice Age 2015-9\")\n    .tag({\n      name: \"Ice Age\",\n      style: mileStoneTagStyle,\n    })\n    .commit(\"Homestead 2016-3\")\n    .tag({\n      name: \"Homestead\",\n      style: mileStoneTagStyle,\n    })\n    .commit({subject: \"DAO Fork 2016-7\", dotText: 'ðŸ”§'})\n    .commit(\"Tangerine Whistle 2016-10\")\n    .commit(\"Spurious Dragon 2016-11\")\n    .commit(\"Byzantium 2017-10\")\n    .tag({\n      name: \"Metropolis\",\n      style: mileStoneTagStyle,\n    })\n    .commit(\"Constantinople 2019-2\")\n    .commit({subject: \"Petersburg 2019-2\", dotText: 'ðŸ”§'})\n    .commit(\"Istanbul 2019-12\")\n    .commit(\"Muir Glacier 2020-1\")\n    .tag(\"Eth1\")\n\n  // https://starkware.co/about-us/\n  // const starkware = gitgraph.branch(\"Starkware\");\n  // starkware.commit(\"DeversiFi 2020/6\").tag(\"StarkEx\")\n\n  // master.checkout();\n  // zksync\n  // const zksync = gitgraph.branch(\"zkSync\");\n  // https://medium.com/matter-labs/zksync-is-live-bringing-trustless-scalable-payments-to-ethereum-9c634b3e6823\n  // zksync.commit('zkSync v1.0 2020/6')\n\n  master.checkout();\n  const eth2 = gitgraph.branch(\"Ethereum 2.0\");\n  eth2\n    .commit(\"Phase 0 (Beacon Chain) 2020-12\")\n    .tag(\"Eth2\")\n\n  // master.checkout();\n  // Optimism\n  // const optimism = gitgraph.branch(\"Optimism\");\n  // https://blog.synthetix.io/l2-mainnet-launch/\n  // optimism.commit('Synthetix staking 2021/1')\n\n  // starkware.commit(\"dYdX 2021/4\")\n  // starkware.commit(\"Immutable X 2021/4\")\n\n  master\n    .commit(\"Berlin 2021-4\")\n\n  // master.checkout();\n  // arbitrum\n  // const arbitrum = gitgraph.branch(\"Arbitrum\");\n  // arbitrum\n  //   .commit('mainnet 2021/9')\n\n  master\n    .commit(\"London (EIP-1559) 2021-8\")\n\n  // master.checkout()\n\n  eth2\n    .commit(\"Altair (Light Client) 2021-10\") // light client support\n    .tag({\n      name: \"We are here\",\n      style: lastReleaseTagStyle,\n    })\n\n  // eth2.checkout()\n\n  // optimism.commit('mainnet 2021/10')\n\n  // zksync.commit('mainnet 2021/8');\n\n  // starkware.commit(\"StarkNet 2021/11\")\n\n  master\n    .commit(\"Arrow Glacier 2021-12\")\n\n  // master\n  // .commit(\"ShangHai 2022-\")\n\n  eth2\n    .merge(master, \"The Merge\")\n    .tag({\n      name: \"Serenity\",\n      style: mileStoneTagStyle,\n    })\n\n  eth2.commit({\n    subject: '',\n    renderDot: renderDot,\n  })\n}\n","// import logo from './logo.svg';\nimport { Gitgraph } from \"@gitgraph/react\";\nimport { milestones, simplified, createFixedHashGenerator } from './milestones'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Gitgraph options={{\n          orientation: \"vertical\",\n          template: simplified,\n          generateCommitHash: createFixedHashGenerator(),\n        }}>{milestones}</Gitgraph>\n      </header>\n      {/* <footer><a\n          className=\"App-link\"\n          href=\"https://en.wikipedia.org/wiki/Ethereum#Launch_and_milestones\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Wikipedia as Reference\n        </a>\n      </footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}